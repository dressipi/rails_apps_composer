Mega-test is a suite of bash scripts that forces rails_apps_composer to generate all
the RailsApps example applications. After generating the applications, mega-test
runs their tests.

Mega-test can be used for regression testing for rails_apps_composer. If you've made
a change to rails_apps_composer, you may not see unintended effects until you've
run a test suite for each of the RailsApps example applications.

Mega-test runs on Linux, Mac OS X, and NetBSD. See a separate README for NetBSD.

How to run the mega-test:

Be in the right directory:
$ cd rails_apps_composer

To run the tests, some RailsApps example applications require various
API keys. Set the API keys as Unix environment variables in your shell.

$ rac_test_RECURLY_API_KEY=Change_this_to_your_key
$ export rac_test_RECURLY_API_KEY
$ rac_test_RECURLY_JS_PRIVATE_KEY=Change_this_to_your_key
$ export rac_test_RECURLY_JS_PRIVATE_KEY
$ rac_test_STRIPE_API_KEY=Change_this_to_your_key
$ export rac_test_STRIPE_API_KEY
$ rac_test_STRIPE_PUBLIC_KEY=Change_this_to_your_key
$ export rac_test_STRIPE_PUBLIC_KEY

Run the mega-test. Paste this into the terminal, including the parentheses:

(
set -e
bundle update activesupport
gem uninstall rails_apps_composer -x
bundle exec rake reinstall
rm -rf ../generated
bundle exec rake mega:test --trace
)

Mega-test will generate a file one level above the current directory:
# repo-list

Mega-test will generate a folder one level above the current directory:
# generated

The *generated/* folder will contain the example applications generated by the mega-test scripts.

You will see test suite failures in the console.

Alternatively, you can open any of the generated example applications and run a test suite with:
$ rake spec
$ cucumber

You can clone an example application from the GitHub repo and use a file compare utility to see differences between the generated project and the original.
